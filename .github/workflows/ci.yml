name: CI

on:
  push:
    branches:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Julia
        uses: julia-actions/setup-julia@latest
        with:
          version: 1.8.3

      - name: Install Julia package requirements
        run: |
          julia --project=EffectiveHorizon.jl -e "using Pkg; Pkg.instantiate()"

      - name: Install custom ALE library
        run: |
          sudo cp -v EffectiveHorizon.jl/libale_c.so $(julia --project=EffectiveHorizon.jl -e 'using Libdl, ArcadeLearningEnvironment; print(dlpath(ArcadeLearningEnvironment.libale_c))')

      - name: Install JuliaFormatter and format
        run: |
          julia  -e 'using Pkg; Pkg.add(PackageSpec(name="JuliaFormatter"))'
          julia  -e 'using JuliaFormatter; format("EffectiveHorizon.jl/src", verbose=true, margin=88)'

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip # This path is specific to Ubuntu
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install pip requirements
        run: |
          pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          pip install --upgrade -r requirements_dev.txt

      - name: Check Julia formatting
        run: |
          julia -e '
          out = pipeline(`git diff --name-only`, ignorestatus(`grep "\\.jl\$"`)) |> read |> String
          if out == ""
              exit(0)
          else
              @error "Some files have not been formatted !!!"
              write(stdout, out)
              exit(1)
          end'
        if: ${{ always() }}

      - name: Run flake8
        run: flake8 effective_horizon stubs tests
        if: ${{ always() }}

      - name: Run black
        run: black --check effective_horizon stubs tests
        if: ${{ always() }}

      - name: Run isort
        run: isort --check --diff effective_horizon stubs tests
        if: ${{ always() }}

      - name: Check types
        if: ${{ always() }}
        run: |
          # Shim for this issue: https://github.com/ray-project/ray/issues/14431
          touch `python -c 'import site; print(site.getsitepackages()[0])'`/ray/py.typed
          mypy effective_horizon tests

      - name: Run tests
        if: ${{ always() }}
        run: |
          export PYTHONPATH=$(pwd)
          pytest -n 4 -m "not uses_rllib"
